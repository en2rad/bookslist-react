{"version":3,"sources":["logo.svg","components/AddTodo.js","components/context.js","components/TodoItem.js","components/TodoList.js","components/button.js","components/modal.js","App.js","reportWebVitals.js","index.js"],"names":["AddTodo","onCreate","useState","valueName","setValueName","valueAuthor","setValueAuthor","valueImg","setValuImg","action","onSubmit","e","preventDefault","trim","value","onChange","target","type","Context","React","createContext","TodoItem","todo","onClick","removeTodo","useContext","showAuthors","classes","completed","push","className","join","id","src","img","alt","name","author","bind","styles","ul","listStyle","TodoList","props","style","todos","map","onToggle","Button","changeAuthorsVisible","text","Modal","state","isOpen","Fragment","setState","this","Component","App","setTodos","setShowAuthors","Provider","filter","length","concat","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b2d8d80.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react'\r\n\r\nfunction AddTodo({ onCreate }) {  \r\n    const [valueName, setValueName] = useState('')\r\n    const [valueAuthor, setValueAuthor] = useState('')\r\n    const [valueImg, setValuImg] = useState('')\r\n\r\n    function submitHandler(e) {\r\n        e.preventDefault()\r\n        if (valueAuthor.trim() && valueName.trim()) {\r\n            onCreate(valueName, valueAuthor, valueImg)\r\n            setValueName('')\r\n            setValueAuthor('')\r\n            setValuImg('')\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n       <form action=\"\" onSubmit={submitHandler}>\r\n           <input value={valueName} onChange={e => setValueName(e.target.value)}/>\r\n           <input  value={valueAuthor} onChange={e => setValueAuthor(e.target.value)}/>\r\n           <input  value={valueImg} onChange={e => setValuImg(e.target.value)}/>\r\n           <button type=\"submit\">Add Books</button>\r\n       </form>\r\n    )\r\n}\r\n\r\nexport default AddTodo","import React from 'react'\r\n\r\nconst Context = React.createContext()\r\n\r\nexport default Context","import React from 'react'\r\nimport Context from './context'\r\nimport { useContext } from 'react'\r\n\r\nfunction TodoItem({todo , onClick}) {\r\n    const { removeTodo } = useContext(Context)\r\n    const { showAuthors } = useContext(Context)\r\n\r\n    const classes = ['item']\r\n    if(todo.completed) {\r\n        classes.push('done')\r\n    }\r\n  \r\n    return (\r\n        <li className={classes.join(' ')} >\r\n          \r\n            <div onClick={() => onClick(todo.id)}>\r\n                <img src={todo.img} alt=\"\"/>\r\n                \r\n                { showAuthors ?\r\n                    <div className=\"subscribe\">\r\n                        <span>{todo.name}</span>\r\n                        <span>{todo.author}</span>\r\n                    </div>  : '' \r\n                }\r\n            </div>\r\n            <button className=\"btn\" onClick={removeTodo.bind(null, todo.id)}>X</button>\r\n        </li>\r\n    )\r\n}\r\n\r\n\r\nexport default TodoItem ","import React from 'react'\r\nimport TodoItem from './TodoItem'\r\n\r\n\r\nconst styles = {\r\n    ul: {\r\n        listStyle: 'none'\r\n    }\r\n}\r\n\r\n\r\nexport default function TodoList(props) {\r\n    return (\r\n        <ul style={styles.ul}>\r\n            {props.todos.map(todo => {\r\n               return <TodoItem todo={ todo } key={ todo.id } onClick={props.onToggle}/> \r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport Context from './context'\r\nimport { useContext } from 'react'\r\n\r\nfunction Button({ changeAuthorsVisible }) {  \r\n    const { showAuthors } = useContext(Context)\r\n\r\n    const text = {\r\n       hide: 'Hide Authors',\r\n       show: 'Show Authors',  \r\n    }\r\n \r\n    return (\r\n        <div>\r\n            <button onClick={() => changeAuthorsVisible()}>{ showAuthors ? text.hide : text.show}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\n\r\nexport default class Modal extends React.Component {\r\n    state = {\r\n        isOpen: false\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <button onClick={() => this.setState({ isOpen: true})}>Open modal</button>\r\n\r\n                {this.state.isOpen && (<div className='modal'>\r\n                    <div className='modal-body'>\r\n                        asd\r\n                        <button onClick={() => this.setState({ isOpen: false})}>Close modal</button>\r\n                    </div>\r\n                </div>)}\r\n            </React.Fragment>\r\n        )\r\n     }\r\n}","import logo from './logo.svg';\nimport './App.css';\n\n\nimport AddTodo from './components/AddTodo'\nimport TodoList from './components/TodoList'\nimport Button from './components/button'\n\nimport { useState } from 'react'\nimport Context from './components/context'\nimport { useEffect} from 'react'\nimport Modal from './components/modal';\n\n\nfunction App() {\n\n    // function addToLocalStorage(todos) {\n    //     const all = getTaskFromLocalStorage('todos')\n    //     all.push(todos)\n    //     localStorage.setItem('todos', JSON.stringify(all))\n    // }\n\n    // function getTaskFromLocalStorage() {\n    //     return JSON.parse(localStorage.getItem('todos') || '[]')\n    // }\n\n    // let todos = getTaskFromLocalStorage()\n \n\n    const [todos, setTodos] = useState([\n        {\n            id: 1,\n            name: 'Burmese Days',\n            author: 'George Orwell',\n            completed: false,\n            img: 'https://www.colibribookstore.com/media/catalog/product/cache/1/image/9df78eab33525d08d6e5fb8d27136e95/b/o/book-ase000000000722903.jpg',\n        },\n        {\n            id: 2,\n            name: '海辺のカフカ',\n            author: '村上 春樹',\n            completed: true,\n            img: 'https://interkniga.net/app/files/2020/06/430000000000187918_cover1-6.jpg?x41547',\n        },\n        {\n            id: 3,\n            name: 'Neverwhere',\n            author: 'Neil Gaiman',\n            completed: false,\n            img: 'https://img-gorod.ru/upload/iblock/2a2/2a20863ac7e2c737d79f43a3339d1a61.jpg',\n        },\n    ])\n    \n    // useEffect(() => {\n    //     fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\n    //         .then(response => response.json())\n    //         .then(todos => {\n    //             setTodos(todos)\n    //         })\n    // }, [])\n\n\n    \n\n    function toggleTodo(id) {\n       \n        setTodos(\n            todos.map(todo => {\n                if(todo.id === id) {\n                    todo.completed = !todo.completed  \n                }\n                return todo\n            })\n        )\n    }\n\n\n    function removeTodo(id) {\n        setTodos(todos.filter(todo => todo.id !== id))\n    }\n\n    function addTodo(name, author, img = 'https://i.ytimg.com/vi/8w7yxmpY6SQ/sddefault.jpg') {\n        let id = todos.length ? todos[todos.length -1].id + 1 : 1;\n        setTodos(todos.concat([\n            {\n                id: id,\n                name: name,\n                author: author,\n                completed: false,\n                img: img,\n            }\n        ]))\n    }\n\n    const [showAuthors, setShowAuthors] = useState(true)\n\n    const changeAuthorsVisible = () => {\n        setShowAuthors(!showAuthors)\n    }\n\n    return (\n        <Context.Provider value={{ removeTodo, showAuthors}}>\n            <Modal/>\n            <div className=\"App\" className=\"wrap\">\n                <Button changeAuthorsVisible={changeAuthorsVisible}/>\n                {todos.length ? <TodoList todos={todos} onToggle={toggleTodo}/> : 'Add Books'}\n               \n            </div>\n            <AddTodo onCreate={addTodo}/>\n        </Context.Provider>\n    );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}